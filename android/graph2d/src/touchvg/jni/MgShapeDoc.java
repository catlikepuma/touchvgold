/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package touchvg.jni;

public class MgShapeDoc extends MgObject {
  private long swigCPtr;

  protected MgShapeDoc(long cPtr, boolean cMemoryOwn) {
    super(graph2dJNI.MgShapeDoc_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MgShapeDoc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static int Type() {
    return graph2dJNI.MgShapeDoc_Type();
  }

  public MgShapeDoc cloneDoc() {
    long cPtr = graph2dJNI.MgShapeDoc_cloneDoc(swigCPtr, this);
    return (cPtr == 0) ? null : new MgShapeDoc(cPtr, false);
  }

  public static MgShapeDoc create() {
    long cPtr = graph2dJNI.MgShapeDoc_create();
    return (cPtr == 0) ? null : new MgShapeDoc(cPtr, false);
  }

  public boolean save(MgStorage s, int startIndex) {
    return graph2dJNI.MgShapeDoc_save__SWIG_0(swigCPtr, this, MgStorage.getCPtr(s), s, startIndex);
  }

  public boolean save(MgStorage s) {
    return graph2dJNI.MgShapeDoc_save__SWIG_1(swigCPtr, this, MgStorage.getCPtr(s), s);
  }

  public boolean load(MgStorage s, boolean addOnly) {
    return graph2dJNI.MgShapeDoc_load__SWIG_0(swigCPtr, this, MgStorage.getCPtr(s), s, addOnly);
  }

  public boolean load(MgStorage s) {
    return graph2dJNI.MgShapeDoc_load__SWIG_1(swigCPtr, this, MgStorage.getCPtr(s), s);
  }

  public void clear() {
    graph2dJNI.MgShapeDoc_clear(swigCPtr, this);
  }

  public int draw(GiGraphics gs) {
    return graph2dJNI.MgShapeDoc_draw(swigCPtr, this, GiGraphics.getCPtr(gs), gs);
  }

  public Box2d getExtent() {
    return new Box2d(graph2dJNI.MgShapeDoc_getExtent(swigCPtr, this), true);
  }

  public int getShapeCount() {
    return graph2dJNI.MgShapeDoc_getShapeCount(swigCPtr, this);
  }

  public MgShapes getCurrentShapes() {
    long cPtr = graph2dJNI.MgShapeDoc_getCurrentShapes(swigCPtr, this);
    return (cPtr == 0) ? null : new MgShapes(cPtr, false);
  }

  public GiContext context() {
    long cPtr = graph2dJNI.MgShapeDoc_context(swigCPtr, this);
    return (cPtr == 0) ? null : new GiContext(cPtr, false);
  }

  public Matrix2d modelTransform() {
    return new Matrix2d(graph2dJNI.MgShapeDoc_modelTransform(swigCPtr, this), false);
  }

  public Box2d getPageRectW() {
    return new Box2d(graph2dJNI.MgShapeDoc_getPageRectW(swigCPtr, this), true);
  }

  public float getViewScale() {
    return graph2dJNI.MgShapeDoc_getViewScale(swigCPtr, this);
  }

  public void setPageRectW(Box2d rectW, float viewScale) {
    graph2dJNI.MgShapeDoc_setPageRectW(swigCPtr, this, Box2d.getCPtr(rectW), rectW, viewScale);
  }

  public int getChangeCount() {
    return graph2dJNI.MgShapeDoc_getChangeCount(swigCPtr, this);
  }

  public void afterChanged() {
    graph2dJNI.MgShapeDoc_afterChanged(swigCPtr, this);
  }

  public MgLockRW getLockData() {
    long cPtr = graph2dJNI.MgShapeDoc_getLockData(swigCPtr, this);
    return (cPtr == 0) ? null : new MgLockRW(cPtr, false);
  }

  public MgObject clone() {
    long cPtr = graph2dJNI.MgShapeDoc_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new MgObject(cPtr, false);
  }

  public void copy(MgObject src) {
    graph2dJNI.MgShapeDoc_copy(swigCPtr, this, MgObject.getCPtr(src), src);
  }

  public void release() {
    graph2dJNI.MgShapeDoc_release(swigCPtr, this);
  }

  public boolean equals(MgObject src) {
    return graph2dJNI.MgShapeDoc_equals(swigCPtr, this, MgObject.getCPtr(src), src);
  }

  public int getType() {
    return graph2dJNI.MgShapeDoc_getType(swigCPtr, this);
  }

  public boolean isKindOf(int type) {
    return graph2dJNI.MgShapeDoc_isKindOf(swigCPtr, this, type);
  }

}
