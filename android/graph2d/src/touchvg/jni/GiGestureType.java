/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package touchvg.jni;

public final class GiGestureType {
  public final static GiGestureType kGestureUnknown = new GiGestureType("kGestureUnknown");
  public final static GiGestureType kSinglePan = new GiGestureType("kSinglePan", graph2dJNI.kSinglePan_get());
  public final static GiGestureType kSingleTap = new GiGestureType("kSingleTap");
  public final static GiGestureType kDoubleTap = new GiGestureType("kDoubleTap");
  public final static GiGestureType kLongPress = new GiGestureType("kLongPress");
  public final static GiGestureType kZoomRotatePan = new GiGestureType("kZoomRotatePan");
  public final static GiGestureType kTwoFingersDblClick = new GiGestureType("kTwoFingersDblClick");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GiGestureType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GiGestureType.class + " with value " + swigValue);
  }

  private GiGestureType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GiGestureType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GiGestureType(String swigName, GiGestureType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GiGestureType[] swigValues = { kGestureUnknown, kSinglePan, kSingleTap, kDoubleTap, kLongPress, kZoomRotatePan, kTwoFingersDblClick };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

