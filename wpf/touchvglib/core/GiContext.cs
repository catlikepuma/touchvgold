/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class GiContext : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GiContext(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(GiContext obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GiContext() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_GiContext(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public GiContext() : this(touchvgPINVOKE.new_GiContext__SWIG_0(), true) {
  }

  public GiContext(float width, GiColor color, int style, GiColor fillcr, bool autoScale) : this(touchvgPINVOKE.new_GiContext__SWIG_1(width, GiColor.getCPtr(color), style, GiColor.getCPtr(fillcr), autoScale), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public GiContext(float width, GiColor color, int style, GiColor fillcr) : this(touchvgPINVOKE.new_GiContext__SWIG_2(width, GiColor.getCPtr(color), style, GiColor.getCPtr(fillcr)), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public GiContext(float width, GiColor color, int style) : this(touchvgPINVOKE.new_GiContext__SWIG_3(width, GiColor.getCPtr(color), style), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public GiContext(float width, GiColor color) : this(touchvgPINVOKE.new_GiContext__SWIG_4(width, GiColor.getCPtr(color)), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public GiContext(float width) : this(touchvgPINVOKE.new_GiContext__SWIG_5(width), true) {
  }

  public GiContext(GiContext src) : this(touchvgPINVOKE.new_GiContext__SWIG_6(GiContext.getCPtr(src)), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public GiContext copy(GiContext src, int mask) {
    GiContext ret = new GiContext(touchvgPINVOKE.GiContext_copy__SWIG_0(swigCPtr, GiContext.getCPtr(src), mask), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GiContext copy(GiContext src) {
    GiContext ret = new GiContext(touchvgPINVOKE.GiContext_copy__SWIG_1(swigCPtr, GiContext.getCPtr(src)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool equals(GiContext src) {
    bool ret = touchvgPINVOKE.GiContext_equals(swigCPtr, GiContext.getCPtr(src));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getLineStyle() {
    int ret = touchvgPINVOKE.GiContext_getLineStyle(swigCPtr);
    return ret;
  }

  public void setLineStyle(int style) {
    touchvgPINVOKE.GiContext_setLineStyle(swigCPtr, style);
  }

  public float getLineWidth() {
    float ret = touchvgPINVOKE.GiContext_getLineWidth(swigCPtr);
    return ret;
  }

  public bool isAutoScale() {
    bool ret = touchvgPINVOKE.GiContext_isAutoScale(swigCPtr);
    return ret;
  }

  public void setLineWidth(float width, bool autoScale) {
    touchvgPINVOKE.GiContext_setLineWidth(swigCPtr, width, autoScale);
  }

  public bool isNullLine() {
    bool ret = touchvgPINVOKE.GiContext_isNullLine(swigCPtr);
    return ret;
  }

  public void setNullLine() {
    touchvgPINVOKE.GiContext_setNullLine(swigCPtr);
  }

  public GiColor getLineColor() {
    GiColor ret = new GiColor(touchvgPINVOKE.GiContext_getLineColor(swigCPtr), true);
    return ret;
  }

  public void setLineColor(GiColor color) {
    touchvgPINVOKE.GiContext_setLineColor__SWIG_0(swigCPtr, GiColor.getCPtr(color));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setLineColor(int r, int g, int b) {
    touchvgPINVOKE.GiContext_setLineColor__SWIG_1(swigCPtr, r, g, b);
  }

  public void setLineColor(int r, int g, int b, int a) {
    touchvgPINVOKE.GiContext_setLineColor__SWIG_2(swigCPtr, r, g, b, a);
  }

  public int getLineARGB() {
    int ret = touchvgPINVOKE.GiContext_getLineARGB(swigCPtr);
    return ret;
  }

  public void setLineARGB(int argb) {
    touchvgPINVOKE.GiContext_setLineARGB(swigCPtr, argb);
  }

  public int getLineAlpha() {
    int ret = touchvgPINVOKE.GiContext_getLineAlpha(swigCPtr);
    return ret;
  }

  public void setLineAlpha(int alpha) {
    touchvgPINVOKE.GiContext_setLineAlpha(swigCPtr, alpha);
  }

  public bool hasFillColor() {
    bool ret = touchvgPINVOKE.GiContext_hasFillColor(swigCPtr);
    return ret;
  }

  public void setNoFillColor() {
    touchvgPINVOKE.GiContext_setNoFillColor(swigCPtr);
  }

  public GiColor getFillColor() {
    GiColor ret = new GiColor(touchvgPINVOKE.GiContext_getFillColor(swigCPtr), true);
    return ret;
  }

  public void setFillColor(GiColor color) {
    touchvgPINVOKE.GiContext_setFillColor__SWIG_0(swigCPtr, GiColor.getCPtr(color));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setFillColor(int r, int g, int b) {
    touchvgPINVOKE.GiContext_setFillColor__SWIG_1(swigCPtr, r, g, b);
  }

  public void setFillColor(int r, int g, int b, int a) {
    touchvgPINVOKE.GiContext_setFillColor__SWIG_2(swigCPtr, r, g, b, a);
  }

  public int getFillARGB() {
    int ret = touchvgPINVOKE.GiContext_getFillARGB(swigCPtr);
    return ret;
  }

  public void setFillARGB(int argb) {
    touchvgPINVOKE.GiContext_setFillARGB(swigCPtr, argb);
  }

  public int getFillAlpha() {
    int ret = touchvgPINVOKE.GiContext_getFillAlpha(swigCPtr);
    return ret;
  }

  public void setFillAlpha(int alpha) {
    touchvgPINVOKE.GiContext_setFillAlpha(swigCPtr, alpha);
  }

  public bool isAutoFillColor() {
    bool ret = touchvgPINVOKE.GiContext_isAutoFillColor(swigCPtr);
    return ret;
  }

  public void setAutoFillColor(bool value) {
    touchvgPINVOKE.GiContext_setAutoFillColor(swigCPtr, value);
  }

  public int getType() {
    int ret = touchvgPINVOKE.GiContext_getType(swigCPtr);
    return ret;
  }

}

}
