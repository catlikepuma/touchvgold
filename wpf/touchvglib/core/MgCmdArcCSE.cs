/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class MgCmdArcCSE : MgCmdArc3P {
  private HandleRef swigCPtr;

  internal MgCmdArcCSE(IntPtr cPtr, bool cMemoryOwn) : base(touchvgPINVOKE.MgCmdArcCSE_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MgCmdArcCSE obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MgCmdArcCSE() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_MgCmdArcCSE(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public new static string Name() {
    string ret = touchvgPINVOKE.MgCmdArcCSE_Name();
    return ret;
  }

  public new static MgCommand Create() {
    IntPtr cPtr = touchvgPINVOKE.MgCmdArcCSE_Create();
    MgCommand ret = (cPtr == IntPtr.Zero) ? null : new MgCommand(cPtr, false);
    return ret;
  }

  public override string getName() {
    string ret = touchvgPINVOKE.MgCmdArcCSE_getName(swigCPtr);
    return ret;
  }

  public override void release() {
    touchvgPINVOKE.MgCmdArcCSE_release(swigCPtr);
  }

}

}
