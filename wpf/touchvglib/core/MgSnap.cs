/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class MgSnap : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MgSnap(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MgSnap obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MgSnap() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_MgSnap(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual void clearSnap() {
    touchvgPINVOKE.MgSnap_clearSnap(swigCPtr);
  }

  public virtual bool drawSnap(MgMotion sender, GiGraphics gs) {
    bool ret = touchvgPINVOKE.MgSnap_drawSnap(swigCPtr, MgMotion.getCPtr(sender), GiGraphics.getCPtr(gs));
    return ret;
  }

  public virtual int getSnappedType() {
    int ret = touchvgPINVOKE.MgSnap_getSnappedType(swigCPtr);
    return ret;
  }

  public virtual int getSnappedPoint(Point2d fromPt, Point2d toPt) {
    int ret = touchvgPINVOKE.MgSnap_getSnappedPoint(swigCPtr, Point2d.getCPtr(fromPt), Point2d.getCPtr(toPt));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual Point2d snapPoint(MgMotion sender, Point2d orignPt) {
    Point2d ret = new Point2d(touchvgPINVOKE.MgSnap_snapPoint(swigCPtr, MgMotion.getCPtr(sender), Point2d.getCPtr(orignPt)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
