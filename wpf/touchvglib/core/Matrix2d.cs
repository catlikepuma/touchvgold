/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class Matrix2d : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Matrix2d(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Matrix2d obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Matrix2d() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_Matrix2d(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public float m11 {
    set {
      touchvgPINVOKE.Matrix2d_m11_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_m11_get(swigCPtr);
      return ret;
    } 
  }

  public float m12 {
    set {
      touchvgPINVOKE.Matrix2d_m12_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_m12_get(swigCPtr);
      return ret;
    } 
  }

  public float m21 {
    set {
      touchvgPINVOKE.Matrix2d_m21_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_m21_get(swigCPtr);
      return ret;
    } 
  }

  public float m22 {
    set {
      touchvgPINVOKE.Matrix2d_m22_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_m22_get(swigCPtr);
      return ret;
    } 
  }

  public float dx {
    set {
      touchvgPINVOKE.Matrix2d_dx_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_dx_get(swigCPtr);
      return ret;
    } 
  }

  public float dy {
    set {
      touchvgPINVOKE.Matrix2d_dy_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.Matrix2d_dy_get(swigCPtr);
      return ret;
    } 
  }

  public static Matrix2d kIdentity() {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_kIdentity(), false);
    return ret;
  }

  public Matrix2d() : this(touchvgPINVOKE.new_Matrix2d__SWIG_0(), true) {
  }

  public Matrix2d(Matrix2d src) : this(touchvgPINVOKE.new_Matrix2d__SWIG_1(Matrix2d.getCPtr(src)), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public Matrix2d(float _m11, float _m12, float _m21, float _m22, float _dx, float _dy) : this(touchvgPINVOKE.new_Matrix2d__SWIG_2(_m11, _m12, _m21, _m22, _dx, _dy), true) {
  }

  public Matrix2d(Vector2d e0, Vector2d e1, Point2d origin) : this(touchvgPINVOKE.new_Matrix2d__SWIG_3(Vector2d.getCPtr(e0), Vector2d.getCPtr(e1), Point2d.getCPtr(origin)), true) {
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public Matrix2d preMultBy(Matrix2d leftSide) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_preMultBy(swigCPtr, Matrix2d.getCPtr(leftSide)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d postMultBy(Matrix2d rightSide) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_postMultBy(swigCPtr, Matrix2d.getCPtr(rightSide)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToProduct(Matrix2d m1, Matrix2d m2) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToProduct(swigCPtr, Matrix2d.getCPtr(m1), Matrix2d.getCPtr(m2)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void TransformPoints(int count, Point2d points) {
    touchvgPINVOKE.Matrix2d_TransformPoints(swigCPtr, count, Point2d.getCPtr(points));
  }

  public void TransformVectors(int count, Vector2d vectors) {
    touchvgPINVOKE.Matrix2d_TransformVectors(swigCPtr, count, Vector2d.getCPtr(vectors));
  }

  public float det() {
    float ret = touchvgPINVOKE.Matrix2d_det(swigCPtr);
    return ret;
  }

  public bool invert() {
    bool ret = touchvgPINVOKE.Matrix2d_invert(swigCPtr);
    return ret;
  }

  public Matrix2d inverse() {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_inverse(swigCPtr), true);
    return ret;
  }

  public bool isInvertible() {
    bool ret = touchvgPINVOKE.Matrix2d_isInvertible(swigCPtr);
    return ret;
  }

  public float scale() {
    float ret = touchvgPINVOKE.Matrix2d_scale(swigCPtr);
    return ret;
  }

  public float scaleX() {
    float ret = touchvgPINVOKE.Matrix2d_scaleX(swigCPtr);
    return ret;
  }

  public float scaleY() {
    float ret = touchvgPINVOKE.Matrix2d_scaleY(swigCPtr);
    return ret;
  }

  public float angle() {
    float ret = touchvgPINVOKE.Matrix2d_angle(swigCPtr);
    return ret;
  }

  public bool isEqualTo(Matrix2d mat, Tol tol) {
    bool ret = touchvgPINVOKE.Matrix2d_isEqualTo__SWIG_0(swigCPtr, Matrix2d.getCPtr(mat), Tol.getCPtr(tol));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isEqualTo(Matrix2d mat) {
    bool ret = touchvgPINVOKE.Matrix2d_isEqualTo__SWIG_1(swigCPtr, Matrix2d.getCPtr(mat));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isIdentity() {
    bool ret = touchvgPINVOKE.Matrix2d_isIdentity(swigCPtr);
    return ret;
  }

  public bool isOrtho() {
    bool ret = touchvgPINVOKE.Matrix2d_isOrtho(swigCPtr);
    return ret;
  }

  public bool hasMirror(Vector2d reflex) {
    bool ret = touchvgPINVOKE.Matrix2d_hasMirror(swigCPtr, Vector2d.getCPtr(reflex));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setCoordSystem(Vector2d e0, Vector2d e1, Point2d origin) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setCoordSystem(swigCPtr, Vector2d.getCPtr(e0), Vector2d.getCPtr(e1), Point2d.getCPtr(origin)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void getCoordSystem(Vector2d e0, Vector2d e1, Point2d origin) {
    touchvgPINVOKE.Matrix2d_getCoordSystem(swigCPtr, Vector2d.getCPtr(e0), Vector2d.getCPtr(e1), Point2d.getCPtr(origin));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Matrix2d coordSystem(Vector2d e0, Vector2d e1, Point2d origin) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_coordSystem__SWIG_0(Vector2d.getCPtr(e0), Vector2d.getCPtr(e1), Point2d.getCPtr(origin)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d coordSystem(Point2d origin, float scaleX, float scaleY, float angle) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_coordSystem__SWIG_1(Point2d.getCPtr(origin), scaleX, scaleY, angle), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d coordSystem(Point2d origin, float scaleX, float scaleY) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_coordSystem__SWIG_2(Point2d.getCPtr(origin), scaleX, scaleY), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d coordSystem(Point2d origin, float scaleX) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_coordSystem__SWIG_3(Point2d.getCPtr(origin), scaleX), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToIdentity() {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToIdentity(swigCPtr), false);
    return ret;
  }

  public Matrix2d set(float _m11, float _m12, float _m21, float _m22, float _dx, float _dy) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_set(swigCPtr, _m11, _m12, _m21, _m22, _dx, _dy), false);
    return ret;
  }

  public Matrix2d setToTranslation(Vector2d vec) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToTranslation(swigCPtr, Vector2d.getCPtr(vec)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToRotation(float angle, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToRotation__SWIG_0(swigCPtr, angle, Point2d.getCPtr(center)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToRotation(float angle) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToRotation__SWIG_1(swigCPtr, angle), false);
    return ret;
  }

  public Matrix2d setToScaling(float scale, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToScaling__SWIG_0(swigCPtr, scale, Point2d.getCPtr(center)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToScaling(float scale) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToScaling__SWIG_1(swigCPtr, scale), false);
    return ret;
  }

  public Matrix2d setToScaling(float scaleX, float scaleY, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToScaling__SWIG_2(swigCPtr, scaleX, scaleY, Point2d.getCPtr(center)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToScaling(float scaleX, float scaleY) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToScaling__SWIG_3(swigCPtr, scaleX, scaleY), false);
    return ret;
  }

  public Matrix2d setToMirroring(Point2d pnt) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToMirroring__SWIG_0(swigCPtr, Point2d.getCPtr(pnt)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToMirroring() {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToMirroring__SWIG_1(swigCPtr), false);
    return ret;
  }

  public Matrix2d setToMirroring(Point2d pnt, Vector2d dir) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToMirroring__SWIG_2(swigCPtr, Point2d.getCPtr(pnt), Vector2d.getCPtr(dir)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToShearing(float sx, float sy, Point2d pnt) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToShearing__SWIG_0(swigCPtr, sx, sy, Point2d.getCPtr(pnt)), false);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Matrix2d setToShearing(float sx, float sy) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_setToShearing__SWIG_1(swigCPtr, sx, sy), false);
    return ret;
  }

  public static Matrix2d translation(Vector2d vec) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_translation(Vector2d.getCPtr(vec)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d rotation(float angle, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_rotation__SWIG_0(angle, Point2d.getCPtr(center)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d rotation(float angle) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_rotation__SWIG_1(angle), true);
    return ret;
  }

  public static Matrix2d scaling(float scale, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_scaling__SWIG_0(scale, Point2d.getCPtr(center)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d scaling(float scale) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_scaling__SWIG_1(scale), true);
    return ret;
  }

  public static Matrix2d scaling(float scaleX, float scaleY, Point2d center) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_scaling__SWIG_2(scaleX, scaleY, Point2d.getCPtr(center)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d scaling(float scaleX, float scaleY) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_scaling__SWIG_3(scaleX, scaleY), true);
    return ret;
  }

  public static Matrix2d mirroring(Point2d pnt) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_mirroring__SWIG_0(Point2d.getCPtr(pnt)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d mirroring() {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_mirroring__SWIG_1(), true);
    return ret;
  }

  public static Matrix2d mirroring(Point2d pnt, Vector2d dir) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_mirroring__SWIG_2(Point2d.getCPtr(pnt), Vector2d.getCPtr(dir)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d shearing(float sx, float sy, Point2d pnt) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_shearing__SWIG_0(sx, sy, Point2d.getCPtr(pnt)), true);
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Matrix2d shearing(float sx, float sy) {
    Matrix2d ret = new Matrix2d(touchvgPINVOKE.Matrix2d_shearing__SWIG_1(sx, sy), true);
    return ret;
  }

}

}
