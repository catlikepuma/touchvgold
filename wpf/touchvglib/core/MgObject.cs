/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class MgObject : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MgObject(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MgObject obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual MgObject clone() {
    IntPtr cPtr = touchvgPINVOKE.MgObject_clone(swigCPtr);
    MgObject ret = (cPtr == IntPtr.Zero) ? null : new MgObject(cPtr, false);
    return ret;
  }

  public virtual void copy(MgObject src) {
    touchvgPINVOKE.MgObject_copy(swigCPtr, MgObject.getCPtr(src));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void release() {
    touchvgPINVOKE.MgObject_release(swigCPtr);
  }

  public virtual bool equals(MgObject src) {
    bool ret = touchvgPINVOKE.MgObject_equals(swigCPtr, MgObject.getCPtr(src));
    if (touchvgPINVOKE.SWIGPendingException.Pending) throw touchvgPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int getType() {
    int ret = touchvgPINVOKE.MgObject_getType(swigCPtr);
    return ret;
  }

  public virtual bool isKindOf(int type) {
    bool ret = touchvgPINVOKE.MgObject_isKindOf(swigCPtr, type);
    return ret;
  }

}

}
