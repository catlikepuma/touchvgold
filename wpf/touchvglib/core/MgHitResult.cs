/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

public class MgHitResult : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MgHitResult(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MgHitResult obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MgHitResult() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_MgHitResult(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Point2d nearpt {
    set {
      touchvgPINVOKE.MgHitResult_nearpt_set(swigCPtr, Point2d.getCPtr(value));
    } 
    get {
      IntPtr cPtr = touchvgPINVOKE.MgHitResult_nearpt_get(swigCPtr);
      Point2d ret = (cPtr == IntPtr.Zero) ? null : new Point2d(cPtr, false);
      return ret;
    } 
  }

  public int segment {
    set {
      touchvgPINVOKE.MgHitResult_segment_set(swigCPtr, value);
    } 
    get {
      int ret = touchvgPINVOKE.MgHitResult_segment_get(swigCPtr);
      return ret;
    } 
  }

  public bool inside {
    set {
      touchvgPINVOKE.MgHitResult_inside_set(swigCPtr, value);
    } 
    get {
      bool ret = touchvgPINVOKE.MgHitResult_inside_get(swigCPtr);
      return ret;
    } 
  }

  public float dist {
    set {
      touchvgPINVOKE.MgHitResult_dist_set(swigCPtr, value);
    } 
    get {
      float ret = touchvgPINVOKE.MgHitResult_dist_get(swigCPtr);
      return ret;
    } 
  }

  public MgHitResult() : this(touchvgPINVOKE.new_MgHitResult(), true) {
  }

}

}
